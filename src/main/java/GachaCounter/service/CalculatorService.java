package GachaCounter.service;

import GachaCounter.domain.dto.CalculateRequest;
import org.springframework.stereotype.Service;

import java.util.Random;

@Service
public class CalculatorService {

    public int calculate(CalculateRequest request) {
        // 캐릭터와 광추의 뽑는 개수와 스택 여부에 대한 값을 각각 더해 return
        double result = 0;
        if (request.getCharacters() != 0)
            result += calculateCharacter(request);
        if (request.getLightCones() != 0)
            result += calculateLightCone(request);
        return (int) Math.round(result);
    }

    private double calculateCharacter(CalculateRequest request) {
        // 스택, 천장이 모두 없을 때
        if (!request.isCharacterIsFull() && request.getCharacterCount() == 0) {
            return request.getCharacters() * characterNotFullValues[0];
        } else {
            // 스택, 천장이 있을 때 한 캐릭터는 기대값이 달라짐, 나머진 스택 없을 때와 동일
            double sum = 0;
            sum += (request.getCharacters()-1) * characterNotFullValues[0];
            if (request.isCharacterIsFull()) {
                sum += characterFullValues[request.getCharacterCount()];
            } else {
                sum += characterNotFullValues[request.getCharacterCount()];
            }
            return sum;
        }
    }

    private double calculateLightCone(CalculateRequest request) {
        // 스택, 천장이 모두 없을 때
        if (!request.isLightConeIsFull() && request.getLightConeCount() == 0) {
            return request.getLightCones() * lightConeNotFullValues[0];
        } else {
            // 스택, 천장이 있을 때 한 광추는 기대값이 달라짐, 나머진 스택 없을 때와 동일
            double sum = 0;
            sum += (request.getLightCones()-1) * lightConeNotFullValues[0];
            if (request.isLightConeIsFull()) {
                sum += lightConeFullValues[request.getLightConeCount()];
            } else {
                sum += lightConeNotFullValues[request.getLightConeCount()];
            }
            return sum;
        }
    }

    private double[] characterNotFullValues = new double[]{
            89.53896, 88.71571, 88.07831, 87.59873, 87.2813, 86.59623, 85.7747, 85.018,
            84.52335, 83.84636, 82.96937, 82.47836, 81.73859, 80.81214, 80.40638, 79.29663,
            78.90305, 78.19584, 77.44126, 76.87919, 76.14495, 75.44806, 75.11161, 74.09774,
            73.38388, 72.43106, 71.8182, 71.27769, 70.43803, 69.6362, 68.79003, 68.34003,
            67.33142, 66.4458, 65.74203, 65.27159, 64.20846, 63.40458, 62.78159, 61.98328,
            61.19466, 60.51136, 59.46761, 58.66139, 58.06229, 57.14885, 56.21074, 55.45128,
            54.75416, 53.9176, 52.91882, 52.03559, 51.16384, 50.2646, 49.35297, 48.63693,
            47.66202, 46.60468, 45.90212, 44.93238, 44.2089, 43.12739, 42.2837, 41.53772,
            40.50183, 39.51302, 38.71814, 37.84785, 36.56992, 35.73914, 34.77533, 33.88795,
            32.94651, 32.14509, 31.32153, 30.80364, 30.16197, 30.0128, 29.57406, 29.31646,
            29.20907, 29.00851, 28.80963, 28.5809, 28.49825, 28.41888, 28.39056, 28.37141,
            28.23499, 28.11743
    };
    private double[] characterFullValues = new double[]{
            62.31601, 61.72863, 61.11557, 60.33369, 59.82694, 59.09455, 58.43988, 57.80469,
            57.1799, 56.44896, 55.76769, 55.19126, 54.70454, 53.81497, 53.07239, 52.368,
            51.79447, 51.09658, 50.29222, 49.6177, 48.94469, 48.23774, 47.54059, 46.71349,
            46.05566, 45.31319, 44.54934, 43.9131, 43.14405, 42.33845, 41.63683, 40.90459,
            40.1089, 39.31894, 38.62541, 37.78073, 37.04219, 36.26175, 35.43295, 34.71517,
            33.84467, 33.12367, 32.33994, 31.42511, 30.62478, 29.79702, 29.03132, 28.21087,
            27.38583, 26.49887, 25.66691, 24.79261, 23.93625, 23.0967, 22.21217, 21.36239,
            20.47147, 19.58653, 18.67307, 17.81752, 16.9095, 15.99858, 15.08873, 14.16559,
            13.2617, 12.32782, 11.40662, 10.47405, 9.5169, 8.57679, 7.61375, 6.65248,
            5.69616, 4.73061, 3.99601, 3.40976, 2.97592, 2.61278, 2.3166, 2.07839,
            1.87757, 1.71049, 1.56771, 1.44901, 1.34532, 1.24958, 1.17197, 1.09581,
            1.03377, 1.0
    };
    private double[] lightConeNotFullValues = {
            69.3897, 68.61458, 67.99365, 67.23966, 66.68897, 66.08635, 65.29867, 64.46919,
            63.94071, 63.17827, 62.51937, 61.68182, 61.12474, 60.50325, 59.86658, 58.92512,
            58.18971, 57.36031, 56.7974, 56.09776, 55.34498, 54.71429, 53.85897, 52.95944,
            52.30255, 51.42107, 50.83303, 50.06887, 49.18168, 48.72569, 47.76324, 46.94013,
            45.92074, 45.30606, 44.24422, 43.62716, 42.67334, 41.94444, 41.29517, 40.43632,
            39.53644, 38.54869, 37.78595, 36.79261, 36.14768, 35.13364, 34.23537, 33.47116,
            32.45754, 31.73916, 30.91974, 29.86449, 28.99817, 28.10017, 27.18948, 26.17521,
            25.46889, 24.34692, 23.56426, 22.48736, 21.64478, 20.70223, 19.78174, 18.78003,
            17.69588, 16.66772, 16.0327, 15.5574, 15.04202, 14.75851, 14.46499, 14.23808,
            14.08469, 14.00385, 13.93828, 13.83556, 13.69933, 13.50534, 13.40175, 13.31883
    };
    private double[] lightConeFullValues = new double[]{
            56.81457, 56.24854, 55.61018, 54.98013, 54.13909, 53.6471, 52.95309, 52.21638,
            51.51662, 50.83824, 50.13323, 49.44458, 48.68271, 47.99882, 47.32716, 46.46329,
            45.79767, 45.08902, 44.32374, 43.61147, 42.78344, 42.1433, 41.2717, 40.58504,
            39.86453, 39.08908, 38.31653, 37.57467, 36.73024, 35.93915, 35.22123, 34.44994,
            33.5399, 32.78633, 31.953, 31.14007, 30.33092, 29.56788, 28.70498, 27.89149,
            27.02459, 26.16608, 25.31933, 24.50419, 23.57376, 22.78307, 21.91472, 21.02709,
            20.14097, 19.26038, 18.35722, 17.47527, 16.55487, 15.68385, 14.76646, 13.8302,
            12.91998, 11.97625, 11.04908, 10.11301, 9.16391, 8.2044, 7.26142, 6.30633,
            5.3317, 4.36152, 3.6358, 3.08052, 2.657, 2.31406, 2.04741, 1.82955,
            1.64526, 1.49941, 1.36958, 1.26187, 1.16643, 1.08584, 1.01472, 1.0
    };

}
